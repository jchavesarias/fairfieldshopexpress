/*
 * File: app/view/initialScreen.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.initialScreen', {
    extend: 'Ext.Panel',
    alias: 'widget.initialScreen',

    config: {
        id: 'initialScreen',
        itemId: 'initialScreen',
        listeners: [
            {
                fn: 'onPanelInitialize',
                event: 'initialize'
            }
        ]
    },

    onPanelInitialize: function(component, options) {
        MyApp.hostUrl = "http://190.241.119.228/";
        //MyApp.hostUrl = "http://localhost:8080/";

        MyApp.version = 1.0;

        $.ajax({
            type: "GET",
            url: MyApp.hostUrl + "getDatabaseVersion",
            data: {},
            dataType: 'json',
            success: function(data) {

                if(MyApp.version < data.version){

                    if(navigator.notification !== undefined){

                        navigator.notification.alert("There is an updated version of this application, please update",  function(){console.log("ok");},'Please Note','Ok'); 
                    }else{
                        alert("There is an updated version of this application, please update");
                    }

                }else{

                    var storage = window.localStorage;

                    var appContainer;

                    if(storage.getItem("userId") !== null){
                        MyApp.userId = storage.getItem("userId");
                        MyApp.finNumber = storage.getItem("finNumber");

                        appContainer = Ext.create('MyApp.view.appContainer');
                        Ext.Viewport.add(appContainer);
                        appContainer.show();
                        component.hide();
                        component.destroy(); 

                    }else{

                        appContainer = Ext.create('MyApp.view.loginForm');
                        Ext.Viewport.add(appContainer);
                        appContainer.show();
                        component.hide();
                        component.destroy();

                    }

                }
            },
            error: function(error) {
                //Ext.Msg.alert('Error', error, Ext.emptyFn);

                if(navigator.notification !== null){

                    navigator.notification.alert(error,  function(){console.log("ok");},'Error','Ok'); 
                }else{
                    alert(error);
                }

            }
        });

    }

});